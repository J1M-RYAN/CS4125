@page "/signup"
@using Blazored.LocalStorage
@using CS4125.Data
@using CS4125.Controllers
@inject NavigationManager UriHelper
@inject ILocalStorageService LocalStorage
@layout EmptyLayout
<Header/>

<PageTitle>Sign Up</PageTitle>
<div class="card-container">
    <div class="login-form card">
        <div class="container-fluid">
            <div class="title">Sign Up</div>
            <p>Please fill in this form to Register.</p>

            <div>
                <input type="text" @bind="@_email" @oninput="OnEmailInputEvent" placeholder="Email" name="email" id="email" required>
            </div>

            <div>
                <input type="password" @bind="@_password" @oninput="OnPasswordInputEvent" placeholder="Password" name="psw" id="psw" required>
            </div>

            <div>
                <input type="password" @bind="@_passwordRepeat" @oninput="OnRepeatPasswordInputEvent" placeholder="Repeat Password" name="psw-repeat" id="psw-repeat" required>
            </div>
            <div>
                <input type="text" @bind="@_firstName" @oninput="OnFirstNamedInputEvent" placeholder="First Name" name="first-name" id="first-name" required>
            </div>
            <div>
                <input type="text" @bind="@_lastName" @oninput="OnLastNameInputEvent" placeholder="Last Name" name="last-name" id="last-name" required>
            </div>

            <div class="button-container">
                <button type="submit" class="register-btn" @onclick="@RegisterUser">Register</button>
            </div>
        </div>

        <div class="container signup">
            <p>Already have an account? <a href="" @onclick="@NavigateLogin" @onclick:preventDefault>Sign in</a>.</p>
        </div>
    </div>
</div>

@code {
    readonly System _system = SystemController.System;
    string _email = "";
    string _password = "";
    string _passwordRepeat = "";
    string _firstName = "";
    string _lastName = "";

    void OnEmailInputEvent(ChangeEventArgs changeEvent)
    {
        _email = (string)changeEvent.Value;
    }

    void OnPasswordInputEvent(ChangeEventArgs changeEvent)
    {
        _password = (string)changeEvent.Value;
    }

    void OnRepeatPasswordInputEvent(ChangeEventArgs changeEvent)
    {
        _passwordRepeat = (string)changeEvent.Value;
    }

    void OnFirstNamedInputEvent(ChangeEventArgs changeEvent)
    {
        _firstName = (string)changeEvent.Value;
    }

    void OnLastNameInputEvent(ChangeEventArgs changeEvent)
    {
        _lastName = (string)changeEvent.Value;
    }

    void NavigateLogin()
    {
        Console.WriteLine("hello world");
        UriHelper.NavigateTo("/login");
    }

    void RegisterUser()
    {
        _system.RegisterFarmer(_email, _firstName, _lastName, _password);
        SetUsername();
        UriHelper.NavigateTo("/app");
    }

    async Task SetUsername()
    {
        await LocalStorage.SetItemAsync("name", _firstName + " " + _lastName);
        var name = await LocalStorage.GetItemAsync<string>("name");
    }

}