@using Microsoft.AspNetCore.Mvc
@using Microsoft.AspNetCore.Identity
@inject AuthenticationStateProvider _authenticationStateProvider
@using Microsoft.AspNetCore.Identity
@inject UserManager<IdentityUser> _userManager
@inject SignInManager<IdentityUser> _signInManager
@using CS4125.Controllers
@using CS4125.Data.AnimalData
@using CS4125.Data.UserData
@using CS4125.Data.System
@using System.Collections
@using CS4125.Data.Finance
@using CS4125.Services
@layout EmptyLayout
@* @inject SystemController systemController *@
<html>

<div class="sidebar">
    <div onclick="@navigateToHome">Overview</div>
    <div onclick="@navigateToAnimal">Animal Manager</div>
    <div onclick="@navigateToSite">Site Manager</div>
    <div onclick="@navigateToInvoice">Bills</div>
</div>

<div class="body-text">
    <!-- body content -->

    <div>
        <div class="header">
            <h1>@currentPage</h1>
            <div class="account">
                <div>@_message</div>
                <div style="color:@_colour">@_tier</div>
                <!--hide upgrade button if tier is gold-->
                @if (_farmer.Tier.ToString() != "Gold")
                {
                    <button @onclick="UpgradeTier" class="nav-link btn btn-link" style="width: 100%;">
                        Upgrade Account Tier
                    </button>
                }
                <img class="profile-logo" src="profile-icon.png" alt="profile logo"/>
                <form id="logoutForm" method="post" action="Identity/Account/LogOut?returnUrl=%2F">
                    <input name="__RequestVerificationToken" type="hidden" value="">
                    <button type="submit" form="logoutForm" class="nav-link btn btn-link" style="width: 100%;">
                        Logout
                    </button>
                </form>

            </div>
        </div>
        @if (currentPage == "Overview")
        {
            <div class="card-holder">
                <div class="card">
                    <div class="card-title">Sites</div>
                    <div class="card-content">@_siteCount</div>
                </div>
                <div class="card">
                    <div class="card-title">Animals</div>
                    <div class="card-content">@_animalCount</div>
                </div>
                <div class="card">
                    <div class="card-title">Remaining Capacity</div>
                    <div class="card-content">@_siteCapacity</div>
                </div>
                <div class="card">
                    <div class="card-title">Next Payment Due</div>
                    <div class="card-content">@_expirationDate</div>
                </div>

            </div>
        }
        @if (currentPage == "Animal Manager")
        {
            <body>
            <div class="card-holder">
                <div class="card">
                    <div class="card-title">Animals</div>
                    <div class="card-content">@_animalCount</div>
                </div>
                <div class="card">
                    <div class="card-title">Remaining Capacity</div>
                    <div class="card-content">@_siteCapacity</div>
                </div>
            </div>
            <div>

                <button @onclick="AddBull" class="nav-link btn btn-link">
                    Add Bovine Ayrshire Bull
                </button>
                <button @onclick="AddCow" class="nav-link btn btn-link">
                    Add Bovine Holstein Cow
                </button>
                <button @onclick="AddRam" class="nav-link btn btn-link">
                    Add Ovine Kerry Hill Ram
                </button>
                <button @onclick="AddEwe" class="nav-link btn btn-link">
                    Add Ovine Cheviot Ewe
                </button>
                <button @onclick="AddMare" class="nav-link btn btn-link">
                    Add Equine Arabian Mare
                </button>
                <button @onclick="AddStallion" class="nav-link btn btn-link">
                    Add Equine Cremello Stallion
                </button>


            </div>

            </body>

            <div>

                Display all animals
                <table class="table table-striped">
                    <thead>
                    <tr>
                        <th>
                            Animal ID
                        </th>
                        <th>
                            Animal Gender
                        </th>
                        <th>
                            Animal Breed
                        </th>
                    </tr>
                    </thead>
                </table>
                @foreach (Animal animal in _animals)
                {
                    <!--spaced table-->
                    <table class="table table-striped">
                        <tbody>
                        <tr>
                            <td>
                                @animal._id
                            </td>
                            <td>
                                @animal._sex
                            </td>
                            <td>
                                @if (animal.GetType().ToString() == "CS4125.Data.AnimalData.Bull")
                                {
                                    <div>Bovine Ayrshire</div>
                                }
                                else if (animal.GetType().ToString() == "CS4125.Data.AnimalData.Cow")
                                {
                                    <div>Bovine Holstein</div>
                                }
                                else if (animal.GetType().ToString() == "CS4125.Data.AnimalData.Ram")
                                {
                                    <div>Ovine Kerry Hill</div>
                                }
                                else if (animal.GetType().ToString() == "CS4125.Data.AnimalData.Ewe")
                                {
                                    <div>Ovine Cheviot</div>
                                }
                                else if (animal.GetType().ToString() == "CS4125.Data.AnimalData.Mare")
                                {
                                    <div>Equine Arabian</div>
                                }
                                else if (animal.GetType().ToString() == "CS4125.Data.AnimalData.Stallion")
                                {
                                    <div>Equine Cremello</div>
                                }
                            </td>
                        </tr>
                        </tbody>
                    </table>
                }

            </div>
        }
        @if (currentPage == "Site Manager")
        {
            <div class="card-holder">
                <div class="card">
                    <div class="card-title">Sites</div>
                    <div class="card-content">@_siteCount</div>
                </div>
                <div class="card">
                    <div class="card-title">Remaining Capacity</div>
                    <div class="card-content">@_siteCapacity</div>
                </div>
            </div>
            <div>
                <button @onclick="AddSite" class="nav-link btn btn-link">
                    Add site
                </button>
            </div>
        }
        @if (currentPage == "Bills")
        {
            <div class="card-holder">
                <div class="card">
                    <div class="card-title">Sites</div>
                    <div class="card-content">@_siteCount</div>
                </div>
                <div class="card">
                    <div class="card-title">Animals</div>
                    <div class="card-content">@_animalCount</div>
                </div>
                <div class="card">
                    <div class="card-title">Next Payment Due</div>
                    <div class="card-content">@_expirationDate</div>
                </div>


            </div>

            <button @onclick="GenerateInvoice" class="nav-link btn btn-link">
                <div>Generate Current Invoice to be sent at payment date</div>
            </button>
 
        }

    </div>
</div>
</html>

@code {

    public Invoice currentInvoice = null!;

    public void GenerateInvoice()
    {
        AdminTasks.CreateInvoiceForAllUsers();
    //get invoice from farmer
        currentInvoice = _farmer.GetInvoiceToPay();
    }


    public string currentPage = "Overview";

    //run LogUsername on load
    protected override async Task OnInitializedAsync()
    {
        var startDate = DateTime.Now;
        var expiryDate = startDate.AddDays(30);
        _expirationDate = expiryDate.ToString("dd/MM/yyyy");
        await GetUser();
    }

    string _message = "User not authenticated!";
    System _system = SystemController.System;
    Farmer _farmer = null!;
    string _tier = "";

    int _siteCount = 404;
    int _animalCount = 404;
    int _siteCapacity = 404;
    string _expirationDate = "";
    string _colour = "black";

    private async Task GetUser()
    {
        var authState = await _authenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity != null && user.Identity.IsAuthenticated)
        {
            var currentUser = await _userManager.GetUserAsync(user);
            if (currentUser == null)
            {
                _message = "User not found";
                return;
            }
            if (currentUser.Email != null) _message = currentUser.Email;
            _farmer = (Farmer) FindUser(currentUser.Id);
            _siteCount = _farmer.GetSiteCount();
            _animalCount = _farmer.GetAnimalCount();
            _siteCapacity = _farmer.GetRemainingCapacity();


            Console.WriteLine($"{user.Identity.Name} is authenticated.{currentUser.Id}");
            _farmer = (Farmer) _system.GetUser(currentUser.Id);
            _tier = "" + _farmer.Tier;
            UpdateColours();
        }
        else
        {
            Console.WriteLine(_message);
        }
    }


    public User FindUser(string id)
    {
        var user = _system.GetUser(id);

        return user;
    }

    private IEnumerable _animals = new List<Animal>();
    //update the page
    public void Update()
    {
        _siteCount = _farmer.GetSiteCount();
        _animalCount = _farmer.GetAnimalCount();
        _siteCapacity = _farmer.GetRemainingCapacity();
        _tier = "" + _farmer.Tier;
        UpdateColours();
        _animals = _farmer.Sites[0].GetAnimals();
    }

    //call update whenever a site is added
    public void AddSite()
    {
        _farmer.AddSite();
        Update();
    }

    //call update whenever an animal is added
    public void AddAnimal(string animalType, string breed)
    {
        var animal = AnimalFactory.CreateAnimal("Bull", "Ayrshire");
        _farmer.Sites[0].AddAnimal(animal);
        Update();
    }

    //call update whenever a tier is upgraded
    public void UpgradeTier()
    {
        switch (_farmer.Tier)
        {
    //if farmer is bronze make him silver, if he is silver make him gold, if he is gold, tell the user he is already gold
            case Tier.Bronze:
                _farmer.Tier = Tier.Silver;
                break;
            case Tier.Silver:
                _farmer.Tier = Tier.Gold;
                break;
            default:
                Console.WriteLine("You are already gold!");
                break;
        }

        Update();
    }

    //update the colours of the page
    public void UpdateColours()
    {
        _colour = _farmer.Tier switch
        {
            
            Tier.Bronze => "brown",
            Tier.Silver => "silver",
            Tier.Gold => "gold",
            _ => "black"
            
            };
    }

    private void AddBull()
    {
        var animal = AnimalFactory.CreateAnimal("Bull", "Ayrshire");
        _farmer.Sites[0].AddAnimal(animal);
        Update();
    }

    private void AddCow()
    {
        var animal = AnimalFactory.CreateAnimal("Cow", "Holstein");
        _farmer.Sites[0].AddAnimal(animal);
        Update();
    }

    private void AddRam()
    {
        var animal = AnimalFactory.CreateAnimal("Ram", "KerryHill");
        _farmer.Sites[0].AddAnimal(animal);
        Update();
    }

    private void AddEwe()
    {
        var animal = AnimalFactory.CreateAnimal("Ewe", "Cheviot");
        _farmer.Sites[0].AddAnimal(animal);
        Update();
    }

    private void AddMare()
    {
        var animal = AnimalFactory.CreateAnimal("Mare", "Arabian");
        _farmer.Sites[0].AddAnimal(animal);
        Update();
    }

    private void AddStallion()
    {
        var animal = AnimalFactory.CreateAnimal("Stallion", "Cremello");
        _farmer.Sites[0].AddAnimal(animal);
        Update();
    }

    public void navigateToAnimal()
    {
        currentPage = "Animal Manager";
    }

    public void navigateToHome()
    {
        currentPage = "Overview";
    }

    public void navigateToInvoice()
    {
        currentPage = "Bills";
    }

    public void navigateToSite()
    {
        currentPage = "Site Manager";
    }


}